======================
Responsive image

======================

===========================================================================================================
VS Code: set up local web server local host

https://blogs.msdn.microsoft.com/cdndevs/2016/01/24/visual-studio-code-and-local-web-server/#comment-111475
===========================================================================================================

Check the image
    Size of the image check(compressed)
    go to network and disable cache then reload, you can see if the size difference

Natural size check
    go to element, click one of image you wannacheck
    then click console and type $0 to see what it is
    type $0.naturalWidth to check natural width
    you could also just click the image on the element



Total bits = pixels x bits per pixel
Less pixel x better compressionn = less bytes

how do you have less size while maintain quority

if you fix max-width to image, it;s only goes up till natural image but good to use

if you wanna put image side by side

You can put margin between the images 
    suchu as 
        margin-right: 10px;
        width:calc((100% - 10px)/2);

    just type selecter to not put marginaftern the last image
        img:last-of-type {
        margin:0 ; 
        }

set vp reate size ----------------------

    vh - view port height
    vw - view port width
        width: 100vw;

    vmin - view port minimum
    fit to smaller hight or width of view port
    If you set it to both, it will get the effect
      width: 100vmin;
      height: 100vmin;

    vmax - viewport max
    cover whole vieport without stretching or squosh.
    it corresponding to whichever greater of vp
    but it will chane img tp square 
        width: 100vmax;
        height: 100vmax;
  

Raster vs Vecter ----------------

    Vecter is better, browser can render a vecter image at any size
    SVG is so much smaller

    use jpg for photograph
    webp is widely supported - alpha transparency and animaton
    if you cannot use svg then use png, 
    use png over gif
  
    Natural imagesize:
        Obviously image need to be only as large as it's display
        If network is slow, the img will take more time to load

    Optimize images
        grunt-page speed

    remember 1em is 16px
    reasonable width is 50em
    
Img optinazation -------------------

    page speed 
        Pagesooed Insights
        https://developers.google.com/speed/pagespeed/insights/
        Grunt PageSpeed plugin
        https://www.npmjs.com/package/grunt-pagespeed


    Grunt
        install grunt cli in your root.
        npm install to install dependancies
        also make sure you are installed imagemagics (done)
        Run grunt on command prompt to run grunt 
            "grunt" alone creates a new, completed images directory
            "grunt clean" removes the images directory
            "grunt responsive_images" re-processes images without removing the old ones
        then it create new folder  with separate folder with new image files (as you set) to use for your web

    vs code and dependancies
        need to use 
        npm install to use package.json file to download depaendancies
        then use
        npm run to run on localhost
        otherwise the udacity front end extension won't rcognise how fast the spped could be

-------------------

every 100ms delay drops amazon sales of 1%
requset only can as fast as the half the speed of light,
simply from San Francisco to London takes 100ms 

For HTTP1
you could use things like image sprits in CSS
https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Images/Implementing_image_sprites_in_CSS

When you use HTTP2, then you don't need to use these hacks

Simply reduce number of images and reduce the request make it all quick

----------------------

Using text as text when it's on over image,
Do not use it as graphics, 

----------------------

using css effect such as shadow and all that cost time to response
L8-4 variety of background from pure css can be used for web and it is powerful

back gound size cover - if you dont know the size of vp, it would be very handy
this property, part of image will be lost but you can add transition to make the change smooth

sourse set attribute
image set attribute

background-size:
cover - image kept as small as possible, it matched to containers smallest dimention (x or y)
completely filled the container though the one of dimention is hidden, not visible
or contain i- is completely filled is with largest dimention which means shorter dimention may not be filled

use unicode for gfx like marks
https://unicode-table.com/en/
https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta
need charset=uft-8 on meta tag

It's actualy recommended to copy and paste the actual unicode charactor on html
it's easier to read and maintain

Icon Font
    area attribute to increase accessability
    
Inline SVG & DataURL ----------------------------------
    reduce number of request
    can be written a background on CSS - reduce http request
    https://css-tricks.com/lodge/svg/09-svg-data-uris/

    Inline SVG on tag and data srl on image tag
    inline looks like this src = "data:image/ping;base65.....


================================================================================
use vector when it's possible. 
inline is good
external is good for using frequently as you can pick it up from cache

1. make the wrapper max-width 600-1200px
2. each image width 100%
3. use grunt to change the size of image and compressor
4. think if you need the image use icon font or css pure back ground when possible
5. choose background-size: cover (or contain);
6. 








